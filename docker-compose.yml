version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ea-invitation-api
    restart: unless-stopped
    working_dir: /var/www/html
    # ‚ùå Hapus volume binding di production untuk security
    # volumes:
    #   - .:/var/www/html
    #   - ./storage:/var/www/html/storage
    ports:
      - "8000:80"
    env_file:
      - .env.production
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - ea-network
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  mysql:
    image: mysql:8.0
    container_name: ea-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "127.0.0.1:3306:3306"  # Bind hanya ke localhost
    networks:
      - ea-network
    # Health check untuk MySQL
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: ea-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"  # Bind hanya ke localhost
    networks:
      - ea-network
    # Redis configuration
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ea-network:
    driver: bridge